.Dd February 6, 2018

.Dt KIKI 3

.Os GNU/Linux

.Sh NAME
.Nm kiki_read_buffer
.Nd read a device buffer in user space

.Sh SYNOPSIS
.Fd #include <kiki_api.h>
.Ft ssize_t
.Fo kiki_read_buffer
.Fa "kiki_buffer_handle_t *buffer"
.Fa "char *data"
.Fa "size_t length"
.Fc

.Sh DESCRIPTION
The
.Fn kiki_read_buffer
function is in charge of dumping a device buffer (entirely or a subset), corresponding to a buffer represented in user space by a
.Fa kiki_buffer_handle_t *buffer
structure pointer, in arbitrary data output pointed by
.Fa data
of length
.Fa length
in bytes.
This data output parameter, may or may not be able to contain the device
buffer's whole content.
This function implementation must be aware of it, as the underlying
kernel interface does not let choosing the amount of data read from a buffer.


.Sh RETURN VALUES
In case of success, the amount of bytes read is returned.

If the length passed by argument is greater than the actual size of the buffer, a value of -2 is returned.

Otherwise, the function should not fail in any other circumstance, even if the underlying kernel interface call(s) could.


.Va errno
is
.Va not
set accordingly.


.Sh ERRORS
.Fn kiki_read_buffer
should only fail if the passed argument
.Fa length
is too great.
In any other circumstance, the function should not fail, even if an underlying kernel interface call may.


.Sh SEE ALSO
.Xr kiki_write_buffer 3


.Sh HISTORY
An
.Fn kiki_read_buffer
function first appeared in 2018,
for the CS Games Operating Systems competition.
